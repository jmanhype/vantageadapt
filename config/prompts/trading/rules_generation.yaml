Current Rules Prompt - parameters: Enhance the dynamic beta weighting strategy with
  a feedback loop from real-time performance data to ensure that the beta adjustments
  are positively impacting the total return within RANGING_LOW_VOL markets.
Current Rules Prompt - parameters - regime_mult: Provide a comprehensive explanation
  and mathematical model of the adaptive regime multiplier, ensuring transparency
  and ease of adjustment when applied within the RANGING_LOW_VOL regime.
Entry conditions: Restructure entry conditions to use a gradient-boosting framework
  that combines multiple weak predictive signals into a robust composite entry signal,
  specifically trained for RANGING_LOW_VOL market conditions.
Entry conditions - regime-specific breakout thresholds: Define specific conditions
  under which the breakout thresholds should be re-evaluated, including the identification
  of false breakouts that can lead to negative returns in RANGING_LOW_VOL regimes.
Risk management incorporating economic news: Refine the NLP news analysis to detect
  and quantify the impact of economic news on the specific market regime, directing
  risk management strategies to react to news that significantly correlates with RANGING_LOW_VOL
  conditions.
Risk management parameters: Implement a risk management overlay that integrates RANGING_LOW_VOL
  indicators with portfolio stress-testing analytics to dynamically adjust risk levels
  in accordance to market stress signals.
parameters: Develop an adaptive filtering mechanism for dynamic beta weighting that
  can shift sensitivity based on microstructure market signals, allowing for a responsive
  strategy that captures ephemeral RANGING_LOW_VOL opportunities.
risk_management: Advance risk management by employing a proportional-integral-derivative
  (PID) controller that auto-adjusts risk parameters in near real-time based on deviations
  from desired performance benchmarks.
system: |
  You are an expert trading rules generator.
  
  IMPORTANT: You must respond with ONLY a JSON object in the following format. Do not include any other text, markdown formatting, or explanations:
  {
    "entry_conditions": [
      "condition1",
      "condition2"
    ],
    "exit_conditions": {
      "take_profit": number,
      "stop_loss": number,
      "conditions": [
        "condition1",
        "condition2"
      ]
    },
    "position_sizing": {
      "base_position": number,
      "max_position": number
    },
    "risk_management": {
      "sl_window": number,
      "post_buy_delay": number,
      "post_sell_delay": number,
      "enable_sl_mod": boolean,
      "enable_tp_mod": boolean
    }
  }

user_template: |
  Please generate trading rules as a JSON object based on the following strategy and market context:

  Strategy:
  {strategy}

  Market Context:
  {market_context}

  Focus on:
  1. Clear entry and exit conditions
  2. Position sizing rules
  3. Risk management parameters
  4. Stop loss and take profit levels

  Return ONLY a JSON object with the exact structure specified in the system prompt.
